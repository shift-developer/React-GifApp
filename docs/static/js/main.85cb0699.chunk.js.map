{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","properties","type","value","onChange","target","getGifs","category","a","search","encodeURI","SEARCH_QUERY","LIMIT","URL","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,oCACI,0BAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OASV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DAEbC,EAASC,UAAUH,GACX,GACG,uCACD,4CACVI,EANa,aAMOF,GACpBG,EAPa,iBAGL,IAMRC,EATa,UAIF,wCAJE,OASOF,GATP,OASsBC,GATtB,OAKH,6CALG,SAWAE,MAAMD,GAXN,cAWbE,EAXa,iBAYEA,EAAKC,OAZP,wBAYZC,EAZY,EAYZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAlBvB,kBAsBZL,GAtBY,4CAAH,sDCEPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKI,UAAU,0DACX,yBAAKC,IAAKL,EAAKM,IAAKP,IACpB,2BAAIA,KCHHQ,EAAU,SAAC,GAAgB,IAAfvB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEjBd,mBAAS,CAC/BwB,KAAM,GACNc,SAAS,IAJ8B,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAqB3C,OAdAC,qBAAW,WACP5B,EAASC,GACL4B,MAAM,SAAAC,GAEHC,YAAY,WACRJ,EAAS,CACLhB,KAAMmB,EACNL,SAAS,MAEd,UAGX,CAACxB,IAEGyB,EDlB4BM,CAAa/B,GAAtCwB,EAF4B,EAE5BA,QAAeP,EAFa,EAEnBP,KAEhB,OACI,oCACI,wBAAIU,UAAU,qCAAqCpB,GAElDwB,GAAW,uBAAGJ,UAAU,oCAAb,cACX,yBAAKA,UAAU,aAGRH,EAAOL,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IACLD,UEMjBoB,EArBM,WAAO,IAAD,EAEa/C,mBAAS,CAAC,SAFvB,mBAEhBgD,EAFgB,KAEJjD,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQiD,EAAWtB,KAAK,SAAAZ,GAAQ,OACpB,kBAAC,EAAD,CAASA,SAAUA,EAAUgC,IAAKhC,U,MCT1DmC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.85cb0699.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories( properties => [inputValue, ...properties]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const search = encodeURI(category);\r\n    const limit = 10;\r\n    const ENDPOINT = 'https://api.giphy.com/v1/gifs/search';\r\n    const API_KEY = '&api_key=gXCjqu83icwYLDDX7MI9uLPwICdMsgDW';\r\n    const SEARCH_QUERY= `?q=${search}`;\r\n    const LIMIT = `&limit=${limit}`;\r\n\r\n    const URL = `${ENDPOINT}${SEARCH_QUERY}${LIMIT}${API_KEY}`;\r\n\r\n    const resp = await fetch(URL);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__slower card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem.js';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {loading, data: images} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            {<div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n const [state, setState] = useState({\r\n     data: [],\r\n     loading: true\r\n });\r\n\r\n useEffect( () => {\r\n     getGifs( category )\r\n        .then( imgs => {\r\n\r\n            setTimeout( () => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 3000);\r\n        })     \r\n\r\n }, [category])\r\n\r\n return state; \r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['meme']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid category={category} key={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}